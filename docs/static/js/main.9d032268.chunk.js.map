{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchgifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchgifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAQF,GAFR,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAH,sDCAPO,EAAc,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAE7B,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAXAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZH,EAAS,CACTf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDfyBO,CAAc5B,GAAjCa,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,oBAAGJ,UAAU,mCAAb,uCAA6EhB,KAE1F,qBAAKgB,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAESA,GADAA,EAAIC,aEZhBkB,EAAe,WAAM,MAGM3C,mBAAS,CAAC,cAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAU9B,OAEI,cADA,CACA,sBACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpBjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9d032268.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length>2){\r\n            setCategories( cats => [ inputValue,...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input \r\n            type=\"text\" \r\n            value={inputValue} \r\n            onChange={ handleInputChange }\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=e3LcK437YwhjLpRcE2puHJq4s7QVnG2W`;\r\n    const resp = await fetch ( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return (gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({url,title}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React/*, { useEffect, useState }*/ from 'react'\r\nimport { useFetchgifs } from '../hooks/useFetchgifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images,loading } = useFetchgifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n\r\n        { loading && <p className='animate__animated animate__flash' >Cargando imagenes gifs de { category }</p> }\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( img =>(\r\n                <GifGridItem\r\n                    key={img.id}\r\n                    { ...img }\r\n                />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchgifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                console.log(imgs);\r\n                setState({\r\n                data: imgs,\r\n                loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n\r\n    return state; // { data: [], loading:true }\r\n}\r\n","// RAFC -- snipet para crear una funcion exportable con import react incluido\r\n\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    // const handleAdd = () =>{\r\n    //     // setCategories([...categories,'Fate Zero']);\r\n    //     setCategories(cats => [...cats,'Fate Zero']);\r\n    // }\r\n    \r\n    return (\r\n        // <> aa </> -- llaves de mayor y menor se denomina fragment que sirve para agrugar codigo html\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}